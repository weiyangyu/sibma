% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wordlength_pattern_2.R
\name{general_create_U}
\alias{general_create_U}
\title{Create model matrices for all particles}
\usage{
general_create_U(all_two_level, particle, orth_all, multiply_len)
}
\arguments{
\item{all_two_level}{logical. If all factors are two levels,
\code{all_two_level} should be \code{TRUE}; otherwise it should be
\code{FALSE}.}

\item{particle}{a list containing all particles.}

\item{orth_all}{a list containing all orthogonal matrices generating
from all the particles.}

\item{multiply_len}{a numeric vector. Each element is used to modify
the value of each column in a model matrix.}
}
\description{
Model matrix represents an experimental design's factorial effects. For
a full factorial experiment, each effect's euclidean distance should be the
same, i.e., each column of the full model matrix
should have the same euclidean distance. However, we now are discussing in
the realm of fractional factorial experiment. And it is not realistic to
create a full model matrix first and pick a
fraction of it when the factor number is large. Therefore, we first transform
each factor's design to its corresponding orthogonal matrix using
\code{sibma::particle_orth()}, and use \code{stats::model.matrix()} to create
the model matrix. If all factors are 2-level, and you use \code{c(-1,1)} as
your level coding, there is no need to use \code{sibma::particle_orth()}, you
can just create the model matrix.
}
\details{
But it is not over yet. After using \code{sibma::particle_orth()},
every factor's orthogonal matrix is orthonormal, but
\code{stats::model.matrix()} will not consider the effect of intercept.
Therefore, we use \code{multiply_len} to specify the effect of intercept.
For instance, if you have an experimental design with two 3-level factors.
Each factor will have an orthogonal matrix specifying the linear and
quadratic effects. Through \code{stats::model.matrix()}, you will receive a
model matrix with a intercept, two linear effects, two quadratic effects, and
four interaction between linear and quadratic effects. To specify the effect
of intercept, \code{multiply_len = c(1,rep(1/sqrt(3),4), rep(1,4))}.
It is fine to not correct the intercept, since it will not affect particles'
ranking in terms of wordlength pattern.
}
