% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SIB_method.R
\name{SIB_relay_only_t}
\alias{SIB_relay_only_t}
\title{Only Increase the number of Iteration}
\usage{
SIB_relay_only_t(
  X,
  LB,
  GB,
  P_w,
  q_GB,
  q_LB,
  q_new,
  all_two_level,
  factor_level,
  t,
  total_unit,
  multiply_len,
  incidence_matrix,
  treatment_effect
)
}
\arguments{
\item{X}{the \code{X} return of the previous
\code{SIB} method.}

\item{LB}{the \code{LB} return of the previous
\code{SIB} method.}

\item{GB}{the \code{GB} return of the previous
\code{SIB} method.}

\item{P_w}{a list. Each element is a matrix describing the orthogonal
projection matrix onto the corresponding stratum variance.}

\item{q_GB}{an integer describing how many columns of a particle
should be mixed with the corresponding columns of \code{GB}.}

\item{q_LB}{an integer describing how many columns of a particle
should be mixed with the corresponding columns of \code{LB}.}

\item{q_new}{an integer describing how many columns of a particle
should be mixed with the corresponding columns of a random
particle created by \code{sibma::create_particle()}.}

\item{all_two_level}{logical. If all factors are two levels,
\code{all_two_level} should be \code{TRUE}; otherwise it should be
\code{FALSE}.}

\item{factor_level}{a list. Each element is a numeric vector specifying
levels of a factor.}

\item{t}{an integer specifying additional iteration number.}

\item{total_unit}{an integer representing the number of total run size in
a full factorial design.}

\item{multiply_len}{a numeric vector. Each element is used to modify
the value of each column in a model matrix.}

\item{incidence_matrix}{a list. Each element is a matrix specifying an
incidence matrix.}

\item{treatment_effect}{a list. Each element is a numeric vector specifying
which factors should have the same treatment effect in terms of a certain
incidence matrix. The order of elements in \code{treatment_effect} should be
corresponding to that in \code{incidence_matrix}.}
}
\description{
Only Increase the number of Iteration
}
